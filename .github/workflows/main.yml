name: Crear imagen docker de students

on: 
    push:
        branches:
            - develop
            - main
    pull_request:
        branches:
            - develop
            - main

jobs:
    construir_contenedor:
        runs-on: ubuntu-latest
        steps:
            - name: clonar repositorio
              uses: actions/checkout@v4.1.7

            - name: Instalando jdk 21
              uses: actions/setup-java@v4
              with:
                  java-version: 21
                  distribution: 'corretto' # Alternative distribution options are available.

            - name: Uninstall containerd to resolve conflicts
              run: |
                sudo apt-get remove -y containerd
                sudo apt-get update

            - name: instalar Docker
              run: |
                sudo apt-get install -y \
                ca-certificates \
                curl \
                gnupg \
                lsb-release
          
                # Añadir la clave GPG de Docker
                curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

                # Configurar el repositorio estable de Docker
                echo \
                "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
                $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

                # Actualizar los repositorios y luego instalar Docker y containerd.io
                sudo apt-get update
                sudo apt-get install -y docker-ce docker-ce-cli containerd.io
                docker --version
      
            - name: instalar Docker Compose
              run: |
                sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
                sudo chmod +x /usr/local/bin/docker-compose
                docker-compose --version  # Verifica que Docker Compose esté instalado

            - name: Build and run with Docker Compose
              run: |
                docker-compose up --build -d  # Inicia los contenedores en segundo plano
                docker-compose ps               # Muestra los contenedores en ejecución

            - name: Esperando que la api este lista
              run: sleep 15

            - name: Cache SonarQube packages
              uses: actions/cache@v4
              with:
                  path: ~/.sonar/cache
                  key: ${{ runner.os }}-sonar
                  restore-keys: ${{ runner.os }}-sonar
            - name: Cache Maven packages
              uses: actions/cache@v4
              with:
                path: ~/.m2
                key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
                restore-keys: ${{ runner.os }}-m2

#            - name: Build and analyze
#              env:
#                SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#                SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
#              run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=students-service -Dsonar.projectName='students-service'

           # - name: Correr run-test.sh para registrar students de prueba
           #   run: |
           #       chmod +x run-test.sh
           #       ./run-test.sh

            - name: Stop and remove containers
              run: docker-compose down
